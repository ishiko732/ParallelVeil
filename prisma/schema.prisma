generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Revlog {
  lid            String   @id @default(cuid())
  cid            String
  grade          Int
  state          Int
  scheduled_days Int
  review         DateTime
  card           Card     @relation(fields: [cid], references: [cid])
}

model Card {
  cid            String    @id @default(cuid())
  due            DateTime  @default(now())
  stability      Float
  difficulty     Float
  elapsed_days   Int
  scheduled_days Int
  reps           Int
  lapses         Int
  state          Int       @default(0)
  last_review    DateTime?
  type           Int
  log            Revlog[]
  Note           Note[]
}

model Parameters {
  uid               BigInt  @id @unique
  request_retention Decimal @default(0.9)
  maximum_interval  BigInt  @default(36500)
  easy_bonus        Decimal @default(1.3)
  hard_factor       Decimal @default(1.2)
  w                 String  @default("{\"w\":[1,1,5,-0.5,-0.5,0.2,1.4,-0.12,0.8,2,-0.2,0.2,1]}")
  enable_fuzz       Boolean @default(false)
  user              User    @relation(fields: [uid], references: [uid])
}

model User {
  uid        BigInt      @id @default(autoincrement())
  username   String      @default(cuid())
  Parameters Parameters?
}

model Note {
  nid      BigInt  @id @default(autoincrement())
  text     String  @default("")
  type     String  @default("Word")
  cid      String
  card     Card    @relation(fields: [cid], references: [cid])
  parentId BigInt?
  parent   Note?   @relation("SubcategoryOf", fields: [parentId], references: [nid])
  notes    Note[]  @relation("SubcategoryOf")
  aid      BigInt
  article  Article @relation(fields: [aid], references: [aid])
}

model Article {
  aid      BigInt  @id @default(autoincrement())
  title    String  @default("")
  link     String
  note     Note[]
  readed   Boolean @default(false)
  position BigInt  @default(0)
}
